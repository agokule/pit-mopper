; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Pit Mopper"
#define MyAppVersion "2.1.0"
#define MyAppExeName "Pit Mopper.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".ptmpr"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define URLProtocol "ptmpr"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{66A76037-BBFF-4ED4-A493-D31A5EFCEA2A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequiredOverridesAllowed=dialog
PrivilegesRequired=lowest
OutputDir=C:\Users\athar\Desktop\Python\dist
OutputBaseFilename=Pit_Mopper_2.1.0_Windows_Installer
SetupIconFile=C:\Users\athar\Desktop\Python\pit-mopper\data\images\windows_icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
LicenseFile=C:\Users\athar\Desktop\Python\pit-mopper\LICENSE.txt
ChangesAssociations=yes
WizardSmallImageFile=C:\Users\athar\Downloads\imageedit-2-9353686834.bmp

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\athar\Desktop\Python\pit-mopper\build\exe.win-amd64-3.11\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "linux_icon.xbm"
Source: "C:\Users\athar\Desktop\Python\pit-mopper\build\exe.win-amd64-3.11\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "linux_icon_darkmode.xbm"

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppName}{#MyAppAssocExt}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppName}{#MyAppAssocExt}"; ValueType: string; ValueName: ""; ValueData: "Pit Mopper Game"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppName}{#MyAppAssocExt}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppName}{#MyAppAssocExt}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: "{#MyAppAssocExt}"; ValueData: ""
Root: HKA; Subkey: "Software\Classes\{#URLProtocol}"; ValueType: "string"; ValueData: "URL:Custom Protocol"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#URLProtocol}"; ValueType: "string"; ValueName: "URL Protocol"; ValueData: ""; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#URLProtocol}\DefaultIcon"; ValueType: "string"; ValueData: "{app}\{#MyAppExeName},0";
Root: HKA; Subkey: "Software\Classes\{#URLProtocol}\shell\open\command"; ValueType: "string"; ValueData: """{app}\{#MyAppExeName}"" ""%1""";

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[InstallDelete]
Type: files; Name: "seperate_updater.exe"
Type: files; Name: "updater.exe"
Type: filesandordirs; Name: "lib\*"
Type: filesandordirs; Name: "data\*"
Type: files; Name: "python310.dll"
Type: files; Name: "python3.dll"

[Code]
function IsUpgrade: Boolean;
var
    Value: string;
    UninstallKey: string;
begin
    UninstallKey := 'Software\Microsoft\Windows\CurrentVersion\Uninstall\' +
        ExpandConstant('{#SetupSetting("AppId")}') + '_is1';
    Result := (RegQueryStringValue(HKLM, UninstallKey, 'UninstallString', Value) or
        RegQueryStringValue(HKCU, UninstallKey, 'UninstallString', Value)) and (Value <> '');
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
if IsUpgrade then
  begin
  if PageID = wpLicense then
    Result := true
  end;
  begin
  if PageID = wpSelectTasks then
    Result := true
  end;
end;